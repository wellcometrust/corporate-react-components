// ----------------------------------
// UI Components
// Mixins
// Grid
// ----------------------------------
// Design System 1.0 Alpha
// 2019-11-11
// ----------------------------------

/**
 * Sets up a grid container with a max-width and some margins
 */

@mixin grid-container {
  margin-left: 5%;
  margin-right: 5%;
  max-width: rem(1344);

  @include mq(xxl) {
    margin-left: auto;
    margin-right: auto;
  }
}

/**
 * Repeat columns
 *
 * @param {number} $repeat - Number of columns to repeat
 * @param {type}   $unit - Type of units (default is fraction)
 */

@function grid-repeat($repeat, $unit: 1fr) {
  $list: ();

  @for $i from 1 through $repeat {
    $list: append($list, $unit, space);
  }

  @return $list;
}

/**
 * Add gap between the grid tracks
 *
 * @param {list}   $boxes - List with box sizes
 * @param {string} $gap - Optional column gap
 */

@function box-gap($boxes, $gap) {
  $box: ();

  @for $i from 1 through length($boxes) {
    $box: append($box, nth($boxes, $i), space);

    // Adding gap between
    @if $gap > 0 {
      // Not the last loop
      @if $i != length($boxes) {
        $box: append($box, $gap, space);
      }
    }
  }

  @return $box;
}

/**
 * Build grid template columns with optional gap
 *
 * @param   {string}   $gap - Optional column gap
 * @param   {list}     $columns - Columns sizes
 * @require {function} box-gap
 */

@mixin grid-columns($gap, $columns: grid-repeat(12, 1fr)) {
  // stylelint-disable-next-line property-no-vendor-prefix
  -ms-grid-columns: box-gap($columns, $gap);
  grid-template-columns: $columns;

  @if $gap > 0 {
    grid-column-gap: $gap;
  }
}

/**
 * Build grid template rows with optional gap
 *
 * @param   {string}   $gap - Optional row gap
 * @param   {list}     $rows - Rows sizes
 * @require {function} box-gap
 */

@mixin grid-rows($gap, $rows) {
  // stylelint-disable-next-line property-no-vendor-prefix
  -ms-grid-rows: box-gap($rows, $gap);
  grid-template-rows: $rows;

  @if $gap > 0 {
    grid-row-gap: $gap;
  }
}

/**
 * Set column span on grid cell
 *
 * @param   {number}   $col-start - grid-column-start
 * @param   {number}   $col-end - grid-column-end
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/grid-cell
 */

@mixin grid-column($col-start, $col-end: null) {
  // stylelint-disable-next-line property-no-vendor-prefix
  -ms-grid-column: $col-start * 2 - 1;

  @if $col-end != null {
    grid-column: #{$col-start} / #{$col-end};
    // stylelint-disable-next-line property-no-vendor-prefix
    -ms-grid-column-span: ($col-end - $col-start) * 2 - 1;
  }

  @else {
    grid-column: #{$col-start};
  }
}

/**
 * Set row span on grid cell
 *
 * @param   {number}   $row-start - grid-row-start
 * @param   {number}   $row-end - grid-row-end
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row
 */

@mixin grid-row($row-start, $row-end: null) {
  // stylelint-disable-next-line property-no-vendor-prefix
  -ms-grid-row: $row-start * 2 - 1;

  @if $row-end != null {
    grid-row: #{$row-start} / #{$row-end};
    // stylelint-disable-next-line property-no-vendor-prefix
    -ms-grid-row-span: ($row-end - $row-start) * 2 - 1;
  }

  @else {
    grid-row: #{$row-start};
  }
}

/**
 * Grid Alignment
 *
 * @param   {string}   $value - align-self value
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/align-self
 */

@mixin grid-align-self($value) {
  align-self: $value;
  // stylelint-disable-next-line property-no-vendor-prefix
  -ms-grid-row-align: $value;
}

/**
 * Grid Justify
 *
 * @param   {string}   $value - justify-self value
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/justify-self
 */

@mixin grid-justify-self($value) {
  // stylelint-disable-next-line property-no-vendor-prefix
  -ms-grid-column-align: $value;
  justify-self: $value;
}

/**
 * Explicitly place a grid item on a row
 *
 * @param {number}    $rows
 * @param {boolean}   $self
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row#Internet_Explorer_issues
 */

@mixin grid-row-auto($rows, $self: false) {
  $counter: 1;

  @for $i from 1 through $rows {
    @if ($self == true) {
      &:nth-child(#{$counter}) {
        // stylelint-disable-next-line property-no-vendor-prefix
        -ms-grid-row: $i;
      }
    }

    @else {
      > :nth-child(#{$counter}) {
        // stylelint-disable-next-line property-no-vendor-prefix
        -ms-grid-row: $i;
      }
    }
    $counter: $counter + 1;
  }
}
